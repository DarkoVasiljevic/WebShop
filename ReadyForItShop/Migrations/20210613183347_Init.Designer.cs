// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyForItShop.Database;

namespace ReadyForItShop.Migrations
{
    [DbContext(typeof(DbaseContext))]
    [Migration("20210613183347_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReadyForItShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 7520,
                            ImageUrl = "https://api.ps.rs/service/mainImageByOid.php",
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = 7521,
                            ImageUrl = "https://api.ps.rs/service/mainImageByOid.php",
                            Name = "Sneakers"
                        });
                });

            modelBuilder.Entity("ReadyForItShop.Models.ProductSku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sku")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSkus");

                    b.HasData(
                        new
                        {
                            Id = 12,
                            ProductId = 7520,
                            Sku = 215012604m
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 7520,
                            Sku = 1021019836m
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 7520,
                            Sku = 1074015042m
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 7521,
                            Sku = 4040016400m
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 7521,
                            Sku = 4533510440m
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 7521,
                            Sku = 3206520434m
                        });
                });

            modelBuilder.Entity("ReadyForItShop.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductSkuId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductSkuId");

                    b.HasIndex("StoreId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 8,
                            ProductSkuId = 17,
                            Quantity = 2,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Price = 0,
                            ProductSkuId = 14,
                            Quantity = 3,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            Price = 2,
                            ProductSkuId = 12,
                            Quantity = 1,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 4,
                            Price = 7,
                            ProductSkuId = 13,
                            Quantity = 1,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 5,
                            Price = 3,
                            ProductSkuId = 17,
                            Quantity = 4,
                            StoreId = 2
                        });
                });

            modelBuilder.Entity("ReadyForItShop.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Main Road 4",
                            Name = "MPO"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Park Avenue 8",
                            Name = "MSO"
                        });
                });

            modelBuilder.Entity("ReadyForItShop.Models.ProductSku", b =>
                {
                    b.HasOne("ReadyForItShop.Models.Product", "Product")
                        .WithMany("ProductSkus")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyForItShop.Models.Stock", b =>
                {
                    b.HasOne("ReadyForItShop.Models.ProductSku", "ProductSku")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductSkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReadyForItShop.Models.Store", "Store")
                        .WithMany("Stocks")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductSku");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ReadyForItShop.Models.Product", b =>
                {
                    b.Navigation("ProductSkus");
                });

            modelBuilder.Entity("ReadyForItShop.Models.ProductSku", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ReadyForItShop.Models.Store", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
